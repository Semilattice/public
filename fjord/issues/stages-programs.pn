Subject: Separate programs for separate compilation stages
Type: Feature

Intermediates such as the token stream, the abstract syntax tree, and System F
should be stored on disk, and each stage should be a program that reads and
writes these intermediates. This increases the amount of parallelism and
caching that the build system can do.

The pipeline should look as follows:

 1. Lexer reads a source file and produces a token file.
 2. Parser reads a token file and produces an AST file with definitions.
 3. Global collector reads an AST file with definitions and produces one AST
    file for each global definition.
 4. Elaborator reads an AST file for a global definition and produces a
    System F file.
 5. Code generator reads a System F file and produces an object file.
 6. Linker reads object files and produces an executable, shared object, or
    archive.
